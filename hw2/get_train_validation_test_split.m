function [train_set, v_set, test_set] = get_train_validation_test_split(inputs, targets, tvt_split)    train_set = {};    v_set = {};    test_set = {};        # First, generate a random number for each sample    num_inputs = length(targets);        # Now use these random numbers to create a random index    [_, new_idx]  = sort(rand(num_inputs, 1));        # Get the random shuffled inputs and targets using the random index    inputs_randomized = inputs(:, new_idx);    targets_randomized = targets(:, new_idx);        # Now split the dataset into training, validation and test based on the input ratios    train_samples = floor(tvt_split(1) * num_inputs);    validation_samples = floor(tvt_split(2) * num_inputs);    test_samples = floor(tvt_split(3) * num_inputs);    train_set{1} = inputs_randomized(:, 1:train_samples);    train_set{2} = targets_randomized(:, 1:train_samples);        validation_start_idx = train_samples + 1;    validation_end_idx = train_samples + validation_samples;    v_set{1} = inputs_randomized(:, validation_start_idx: validation_end_idx);    v_set{2} = targets_randomized(:, validation_start_idx: validation_end_idx);        test_start_idx = validation_end_idx + 1;    test_set{1} = inputs_randomized(:, test_start_idx: end);    test_set{2} = targets_randomized(:, test_start_idx: end);endfunction