function [zs, activations] = feedforward(input, weights, biases, transformation='sigmoid')    zs = {};    activations = {};    # Set first layer of activations to input    activations{1} = input;    a = input;    # For all weights, compute z = w(L+1)*a(L) + b(L+!)    for idx = 1:length(weights)        w = weights{idx}';        # Biases have to be duplicated for every input        b = biases{idx} * ones(rows(biases), columns(a));        z = w * a + b;        zs{idx} = z;                # activation is sigmoid of z        a = transform(z, transformation);        activations{idx + 1} = a;    endforendfunction